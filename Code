import pyttsx3
import SpeechRecognition as sr
import wikipedia
import webbrowser
import datetime
import email
import os
import smtplib

#sapi5---microsoft speech api
engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
#print(voices) as we can choose male or female voices
print(voices[0].id)
engine.setProperty('voice',voices[0].id)


def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def acknowledge():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good morning Majesty!")
    
    elif hour>=12 and hour<18:
        speak("Good afternoon Majesty!")

    else:
        speak("Good evening Majesty!") 

    speak("I am your jinny . please tell me what can I do for you?")      

def takeCommand():
    #it takes microphone imput from user and returns string output

    r = sr.Recognizer()#this helps in recognizing audio
    with sr.Microphone() as source:
        print("I am listening...")
        r.pause_threshold = 1 #seconds of non-speaking audio before a phrase is considered
        audio = r.listen(source)

    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en-in')
        print(f"Your order: {query}\n")

    except Exception as e:
        #print(e)    

        print("Pardon please")
        return "None"#none string 
    return query



def sendEmail(to,content):
    server = smtplib.SMTP('smtp.gmail.com',587)
    server.ehlo()
    server.starttls()
    server.login('youremail@gmail.com','your-password-here')
    server.sendmail('youremail@gamil.com',to,content)
    server.close()
     





if __name__ == "__main__":
    acknowledge()
    #while True:
    if 1:
        query = takeCommand().lower()

    
    #logic for executing tasks based on query
    #speak("Yes your majesty")

        if 'wikepedia' in query:
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("According to wikipedia")
            speak(results)

        elif 'open youtube' in query:
            webbrowser.open("youtube.com")

        elif 'open google' in query:
            webbrowser.open("google.com")

        elif 'open stackoverflow' in query:
            webbrowser.open("stackoverflow.com")  

        elif 'play music' in query:
            #music_dir = 'D:\\Non Critical\\songs\\Favorite Songs2'
            #songs = os.listdir(music_dir)
            #print(songs)
            #os.startfile(os.path.join(music_dir,songs[0]))
            webbrowser.open("youtubemusic.com")      


        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"Majesty, the time is{strTime}")


        elif 'open code' in query:
            codepath = "C:\\Users\\DELL\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe"
            os.startfile(codepath)

        elif 'email to ankita' in query:
            #can make a dictionary
            try:
                speak("What should I say?")
                content = takeCommand()
                to = "ankitayourEmail@gmail.com"
                sendEmail(to,content)
                speak("Email has been sent!")
            except Exception as e:
                print(e)
                speak("Sorry Majesty I am unable to send this email")

        elif 'quit' in query:
            exit()
